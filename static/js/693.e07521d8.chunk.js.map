{"version":3,"file":"static/js/693.e07521d8.chunk.js","mappings":"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","sources":["API.js","components/BackLink.jsx","components/MovieData/MovieData.styled.jsx","components/MovieData/MovieData.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = 'bdf7291b5a7be013f42f0c0b2cf5cd5d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n\n  return res.data.results;\n};\n\nexport const fetchSearch = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const res = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n  return res.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const res = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return res.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const res = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n\n  return res.data.results;\n};\n\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(NavLink)`\n    display: inline-flex;\n    align-items: center;\n    gap: 4px;\n    padding: 8px 0;\n    color: black;\n    text-decoration: none;\n    font-weight: 500;\n    text-transform: uppercase;\n`;\n\nexport const BackLink = ({ to, children }) => {\n    return (\n        <StyledLink to={to}>\n\n            {children}\n        </StyledLink>\n    );\n};","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\n\nexport const ContainerMovie = styled.div`\n    padding: 8px 48px;\n`;\n\nexport const Box = styled.div`\n    display: flex;\n    gap: 16px;\n    max-width: 1024px;\n    padding: 20px 12px;\n    border: 1px solid black;\n    border-radius: 8px;\n    max-width: 1600px;\n`;\n\nexport const Poster = styled.img`\n    width: 280px;\n    height: 320px;\n    border-radius: 12px;\n    object-fit: cover;\n`;\n\nexport const BoxDataMovie = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 20px;\n    padding: 0 20px;\n`;\n\nexport const ListGenres = styled.ul`\n    display: flex;\n    list-style: none;\n    gap: 10px;\n`;\n\nexport const ListLink = styled.ul`\n    list-style: none;\n`;\n\nexport const Title = styled.p`\n    margin: 20px 0;\n    font-weight: 500;\n`;\n\nexport const Links = styled(NavLink)`\n    display: inline-block;\n    padding: 4px 10px;\n    margin-bottom: 10px;\n    border-radius: 8px;\n    color: black;\n    text-decoration: none;\n    text-align: center;\n    width: 80px;\n    border: 1px solid black;\n`;","import {\n    ContainerMovie,\n    Box,\n    Poster,\n    BoxDataMovie,\n    ListGenres,\n    ListLink,\n    Title,\n    Links\n} from './MovieData.styled';\nimport PropTypes from 'prop-types';\nimport { Outlet } from 'react-router-dom';\nimport { baseImgUrl } from 'API';\n\nexport const MovieData = ({ url, tag, title, score, overview, genres }) => {\n    return (\n        <ContainerMovie>\n            <Box>\n                <Poster src={baseImgUrl + url} alt={tag} />\n                \n                <BoxDataMovie>\n                    <h2>{title}</h2>\n                    <p>User score: {Math.round(score * 10)}%</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <ListGenres>\n                        {genres.map(genre => (\n                            <li key={genre.id}>{genre.name}</li>\n                        ))}\n                    </ListGenres>\n                </BoxDataMovie>\n            </Box>\n            <Title>Additional information</Title>\n            <ListLink>\n                <li>\n                    <Links to=\"cast\">Cast</Links>\n                </li>\n                <li>\n                    <Links to=\"reviews\">Reviews</Links>\n                </li>\n            </ListLink>\n            <Outlet/>\n        </ContainerMovie>\n    );\n};\n\nMovieData.propTypes = {\n    url: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n};","import { BackLink } from \"components/BackLink\";\nimport {MovieData} from \"components/MovieData/MovieData\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { fetchMovieDetails } from \"API\";\n\nconst MovieDetails = () => {\n    const [movieDetails, setMovieDetails] = useState(null);\n    const location = useLocation();\n    const ref = useRef(location.state?.from ?? '/movies');\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        async function fetchMoviesById() {\n            try {\n                const data = await fetchMovieDetails(movieId);\n                setMovieDetails(data);\n            } catch {\n                console.log(Error);\n            }\n        }\n        fetchMoviesById();\n    }, [movieId]);\n\n    return (\n        <>\n            <BackLink to={ref.current}>BACK</BackLink>\n            {movieDetails && (\n                <MovieData\n                    url={movieDetails.poster_path}\n                    tag={movieDetails.title}\n                    title={movieDetails.title}\n                    score={movieDetails.vote_average}\n                    overview={movieDetails.overview}\n                    genres={movieDetails.genres}\n                />\n            )}\n        </>\n    );\n};\n\nexport default MovieDetails;"],"names":["apiKey","axios","fetchTrending","res","data","results","fetchSearch","query","fetchMovieDetails","id","fetchMovieCredits","cast","fetchMovieReviews","baseImgUrl","StyledLink","styled","NavLink","BackLink","to","children","ContainerMovie","Box","Poster","BoxDataMovie","ListGenres","ListLink","Title","Links","MovieData","url","tag","title","score","overview","genres","src","alt","Math","round","map","genre","name","useState","movieDetails","setMovieDetails","location","useLocation","ref","useRef","state","from","movieId","useParams","useEffect","console","log","Error","fetchMoviesById","current","poster_path","vote_average"],"sourceRoot":""}