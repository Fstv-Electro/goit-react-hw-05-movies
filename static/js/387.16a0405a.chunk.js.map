{"version":3,"file":"static/js/387.16a0405a.chunk.js","mappings":"uUAEMA,EAAS,mCACfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACTD,EAAAA,EAAAA,IAAA,qCAAwCD,IAD/B,cACrBG,EADqB,yBAGpBA,EAAIC,KAAKC,SAHW,2CAAH,qDAMbC,EAAW,mCAAG,WAAMC,GAAN,uFACPN,EAAAA,EAAAA,IAAA,+BACQD,EADR,iCACuCO,EADvC,gCADO,cACnBJ,EADmB,yBAKlBA,EAAIC,KAAKC,SALS,2CAAH,sDAQXG,EAAiB,mCAAG,WAAMC,GAAN,uFACbR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAiCT,EAAjC,oBADa,cACzBG,EADyB,yBAExBA,EAAIC,MAFoB,2CAAH,sDAKjBM,EAAiB,mCAAG,WAAMD,GAAN,uFACbR,EAAAA,EAAAA,IAAA,gBACPQ,EADO,4BACeT,EADf,oBADa,cACzBG,EADyB,yBAIxBA,EAAIC,KAAKO,MAJe,2CAAH,sDAOjBC,EAAiB,mCAAG,WAAMH,GAAN,uFACbR,EAAAA,EAAAA,IAAA,gBACPQ,EADO,4BACeT,EADf,2BADa,cACzBG,EADyB,yBAKxBA,EAAIC,KAAKC,SALe,2CAAH,sDAQjBQ,EAAa,iC,4JCrCbC,EAAaC,EAAAA,GAAAA,GAAH,wNAWVC,EAASD,EAAAA,GAAAA,EAAH,8E,SCyBnB,EAjCgB,WACZ,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAXAE,EAAAA,EAAAA,YAAU,YACN,iBAAC,8GAE0BV,EAAAA,EAAAA,IAAkBQ,GAF5C,OAEahB,EAFb,OAGOe,EAAWf,GAHlB,gDAKOmB,QAAQC,IAAIC,OALnB,wDAAD,EAQH,GAAE,CAACL,KAGA,8BACKF,GAAaA,EAAQQ,QAClB,SAACZ,EAAD,UACKI,EAAQS,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,UAACb,EAAD,sBAAiBY,MACjB,uBAAIC,MAFCpB,EADA,OAQjB,oDAIf,C","sources":["API.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = 'bdf7291b5a7be013f42f0c0b2cf5cd5d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  const res = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n\n  return res.data.results;\n};\n\nexport const fetchSearch = async query => {\n  const res = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return res.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const res = await axios.get(`movie/${id}?api_key=${apiKey}&language=en-US`);\n  return res.data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const res = await axios.get(\n    `movie/${id}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return res.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const res = await axios.get(\n    `movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n  );\n\n  return res.data.results;\n};\n\nexport const baseImgUrl = 'https://image.tmdb.org/t/p/w500';\n","import styled from \"styled-components\";\n\nexport const ListReview = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    list-style: none;\n    max-width: 1024px;\n    border: 1px solid black;\n    padding: 8px 20px;\n    text-align: justify;\n`;\n\nexport const Author = styled.b`\n    display: inline-block;\n    margin-bottom: 10px;\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from \"API\";\nimport { ListReview, Author } from \"./Reviews.styled\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const data = await fetchMovieReviews(movieId);\n                setReviews(data);\n            } catch {\n                console.log(Error);\n            }\n        })();\n    }, [movieId]);\n\n    return (\n        <>\n            {reviews && !!reviews.length ? (\n                <ListReview>\n                    {reviews.map(({ id, author, content }) => (\n                        <li key={id}>\n                            <Author>Author: {author}</Author>\n                            <p>{content}</p>\n                        </li>\n                    ))}\n                </ListReview>\n            ) : (\n                <div>We don't have reviews</div>\n            )}\n        </>\n    );\n};\n\nexport default Reviews;"],"names":["apiKey","axios","fetchTrending","res","data","results","fetchSearch","query","fetchMovieDetails","id","fetchMovieCredits","cast","fetchMovieReviews","baseImgUrl","ListReview","styled","Author","useState","reviews","setReviews","movieId","useParams","useEffect","console","log","Error","length","map","author","content"],"sourceRoot":""}